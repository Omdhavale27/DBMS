Please enter a MongoDB connection string (Default: mongodb://localhost/): connect
connect
Current Mongosh Log ID: 68dfa36973ad63ac0bcebea3
Connecting to:          mongodb://127.0.0.1:27017/connect?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+2.5.8
Using MongoDB:          8.2.0
Using Mongosh:          2.5.8

For mongosh info see: https://www.mongodb.com/docs/mongodb-shell/

------
   The server generated these startup warnings when booting
   2025-09-26T10:01:29.579+05:30: Access control is not enabled for the database. Read and write access to data and configuration is unrestricted
------

connect> use demoexample;
switched to db demoexample
demoexample> show dbs;
Demo          68.00 KiB
Demo1         72.00 KiB
admin         48.00 KiB
company        8.00 KiB
config        96.00 KiB
demoexample   68.00 KiB
ja             8.00 KiB
james         72.00 KiB
local         72.00 KiB
query         32.00 KiB
school       200.00 KiB
test         136.00 KiB
demoexample> db.createCollection('stud')
{ ok: 1 }
demoexample> db.stud.insertOne({RollNo:101,name:{fname:'Om',mname:'Haresh',Lname:'Dhavale'},class:'TE'})
{
  acknowledged: true,
  insertedId: ObjectId('68dfa42373ad63ac0bcebea4')
}
demoexample> db.stud.insertOne({RollNo:102,name:{fname:'Manoj',mname:'Ramdas',Lname:'Bhadange'},class:'TE'})
{
  acknowledged: true,
  insertedId: ObjectId('68dfa42e73ad63ac0bcebea5')
}
demoexample> db.stud.find()
[
  {
    _id: ObjectId('68dfa025af2158ad48cebea4'),
    RollNo: 101,
    name: 'Virat',
    class: 'TE'
  },
  {
    _id: ObjectId('68dfa42373ad63ac0bcebea4'),
    RollNo: 101,
    name: { fname: 'Om', mname: 'Haresh', Lname: 'Dhavale' },
    class: 'TE'
  },
  {
    _id: ObjectId('68dfa42e73ad63ac0bcebea5'),
    RollNo: 102,
    name: { fname: 'Manoj', mname: 'Ramdas', Lname: 'Bhadange' },
    class: 'TE'
  }
]
demoexample> db.stud.update({RollNo:101},{$set:{name:'Virat'}})
DeprecationWarning: Collection.update() is deprecated. Use updateOne, updateMany, or bulkWrite.
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 0,
  upsertedCount: 0
}
demoexample> db.stud.find()
[
  {
    _id: ObjectId('68dfa025af2158ad48cebea4'),
    RollNo: 101,
    name: 'Virat',
    class: 'TE'
  },
  {
    _id: ObjectId('68dfa42373ad63ac0bcebea4'),
    RollNo: 101,
    name: { fname: 'Om', mname: 'Haresh', Lname: 'Dhavale' },
    class: 'TE'
  },
  {
    _id: ObjectId('68dfa42e73ad63ac0bcebea5'),
    RollNo: 102,
    name: { fname: 'Manoj', mname: 'Ramdas', Lname: 'Bhadange' },
    class: 'TE'
  }
]
demoexample> db.stud.remove({RollNo:102})
DeprecationWarning: Collection.remove() is deprecated. Use deleteOne, deleteMany, findOneAndDelete, or bulkWrite.
{ acknowledged: true, deletedCount: 1 }
demoexample> db.stud.find()
[
  {
    _id: ObjectId('68dfa025af2158ad48cebea4'),
    RollNo: 101,
    name: 'Virat',
    class: 'TE'
  },
  {
    _id: ObjectId('68dfa42373ad63ac0bcebea4'),
    RollNo: 101,
    name: { fname: 'Om', mname: 'Haresh', Lname: 'Dhavale' },
    class: 'TE'
  }
]
demoexample>